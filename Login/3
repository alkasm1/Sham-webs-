tool_use_id=toolu_vrtx_011jAw1Db8k1gfwBHRaj9oyH
tool_name=replace_code
input={"old_str": "        // Initialize\n        updateCartDisplay();", "new_str": "        // User Authentication System\n        let currentUser = null;\n\n        // Check if user is logged in (simulate with simple storage since localStorage is not available)\n        function checkUserLogin() {\n            // In a real app, this would check with a backend server\n            // For demo purposes, we'll use a simple in-memory state\n            updateUserInterface();\n        }\n\n        function updateUserInterface() {\n            const notLoggedIn = document.getElementById('notLoggedIn');\n            const loggedIn = document.getElementById('loggedIn');\n            const userName = document.getElementById('userName');\n\n            if (currentUser) {\n                notLoggedIn.classList.add('hidden');\n                loggedIn.classList.remove('hidden');\n                userName.textContent = currentUser.name;\n            } else {\n                notLoggedIn.classList.remove('hidden');\n                loggedIn.classList.add('hidden');\n            }\n        }\n\n        // Login Modal Functions\n        function showLoginModal() {\n            document.getElementById('loginModal').classList.remove('hidden');\n        }\n\n        function closeLoginModal() {\n            document.getElementById('loginModal').classList.add('hidden');\n        }\n\n        function showRegisterModal() {\n            document.getElementById('registerModal').classList.remove('hidden');\n        }\n\n        function closeRegisterModal() {\n            document.getElementById('registerModal').classList.add('hidden');\n        }\n\n        function switchToRegister() {\n            closeLoginModal();\n            showRegisterModal();\n        }\n\n        function switchToLogin() {\n            closeRegisterModal();\n            showLoginModal();\n        }\n\n        // Handle Login Form\n        function handleLogin(event) {\n            event.preventDefault();\n            \n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n\n            // Simulate login validation (in real app, this would be done on backend)\n            if (email && password) {\n                // For demo purposes, accept any valid email/password combination\n                currentUser = {\n                    email: email,\n                    name: email.split('@')[0] // Use part before @ as name\n                };\n                \n                updateUserInterface();\n                closeLoginModal();\n                showCustomAlert(`مرحباً ${currentUser.name}! تم تسجيل الدخول بنجاح`);\n                \n                // Clear form\n                document.getElementById('loginEmail').value = '';\n                document.getElementById('loginPassword').value = '';\n            } else {\n                showCustomAlert('يرجى إدخال البريد الإلكتروني وكلمة المرور');\n            }\n        }\n\n        // Handle Registration Form\n        function handleRegister(event) {\n            event.preventDefault();\n            \n            const name = document.getElementById('registerName').value;\n            const email = document.getElementById('registerEmail').value;\n            const phone = document.getElementById('registerPhone').value;\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n            // Validate form\n            if (!name || !email || !phone || !password || !confirmPassword) {\n                showCustomAlert('يرجى ملء جميع الحقول المطلوبة');\n                return;\n            }\n\n            if (password !== confirmPassword) {\n                showCustomAlert('كلمات المرور غير متطابقة');\n                return;\n            }\n\n            if (password.length < 6) {\n                showCustomAlert('كلمة المرور يجب أن تكون 6 أحرف على الأقل');\n                return;\n            }\n\n            // Simulate registration (in real app, this would be done on backend)\n            currentUser = {\n                name: name,\n                email: email,\n                phone: phone\n            };\n\n            updateUserInterface();\n            closeRegisterModal();\n            showCustomAlert(`مرحباً ${name}! تم إنشاء حسابك بنجاح`);\n            \n            // Clear form\n            document.getElementById('registerName').value = '';\n            document.getElementById('registerEmail').value = '';\n            document.getElementById('registerPhone').value = '';\n            document.getElementById('registerPassword').value = '';\n            document.getElementById('registerConfirmPassword').value = '';\n        }\n\n        // Logout Function\n        function logout() {\n            currentUser = null;\n            updateUserInterface();\n            showCustomAlert('تم تسجيل الخروج بنجاح');\n        }\n\n        // Initialize\n        updateCartDisplay();\n        checkUserLogin();"}
